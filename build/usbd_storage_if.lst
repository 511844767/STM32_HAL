ARM GAS  /tmp/ccWU66nC.s 			page 1


   1              		.cpu cortex-m3
   2              		.arch armv7-m
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"usbd_storage_if.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.file 1 "USB_DEVICE/App/usbd_storage_if.c"
  18              		.section	.text.STORAGE_Init_FS,"ax",%progbits
  19              		.align	1
  20              		.syntax unified
  21              		.thumb
  22              		.thumb_func
  24              	STORAGE_Init_FS:
  25              	.LVL0:
  26              	.LFB68:
   1:USB_DEVICE/App/usbd_storage_if.c **** /* USER CODE BEGIN Header */
   2:USB_DEVICE/App/usbd_storage_if.c **** /**
   3:USB_DEVICE/App/usbd_storage_if.c ****   ******************************************************************************
   4:USB_DEVICE/App/usbd_storage_if.c ****   * @file           : usbd_storage_if.c
   5:USB_DEVICE/App/usbd_storage_if.c ****   * @version        : v2.0_Cube
   6:USB_DEVICE/App/usbd_storage_if.c ****   * @brief          : Memory management layer.
   7:USB_DEVICE/App/usbd_storage_if.c ****   ******************************************************************************
   8:USB_DEVICE/App/usbd_storage_if.c ****   * @attention
   9:USB_DEVICE/App/usbd_storage_if.c ****   *
  10:USB_DEVICE/App/usbd_storage_if.c ****   * Copyright (c) 2023 STMicroelectronics.
  11:USB_DEVICE/App/usbd_storage_if.c ****   * All rights reserved.
  12:USB_DEVICE/App/usbd_storage_if.c ****   *
  13:USB_DEVICE/App/usbd_storage_if.c ****   * This software is licensed under terms that can be found in the LICENSE file
  14:USB_DEVICE/App/usbd_storage_if.c ****   * in the root directory of this software component.
  15:USB_DEVICE/App/usbd_storage_if.c ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  16:USB_DEVICE/App/usbd_storage_if.c ****   *
  17:USB_DEVICE/App/usbd_storage_if.c ****   ******************************************************************************
  18:USB_DEVICE/App/usbd_storage_if.c ****   */
  19:USB_DEVICE/App/usbd_storage_if.c **** /* USER CODE END Header */
  20:USB_DEVICE/App/usbd_storage_if.c **** 
  21:USB_DEVICE/App/usbd_storage_if.c **** /* Includes ------------------------------------------------------------------*/
  22:USB_DEVICE/App/usbd_storage_if.c **** #include "usbd_storage_if.h"
  23:USB_DEVICE/App/usbd_storage_if.c **** 
  24:USB_DEVICE/App/usbd_storage_if.c **** /* USER CODE BEGIN INCLUDE */
  25:USB_DEVICE/App/usbd_storage_if.c **** 
  26:USB_DEVICE/App/usbd_storage_if.c **** /* USER CODE END INCLUDE */
  27:USB_DEVICE/App/usbd_storage_if.c **** 
  28:USB_DEVICE/App/usbd_storage_if.c **** /* Private typedef -----------------------------------------------------------*/
  29:USB_DEVICE/App/usbd_storage_if.c **** /* Private define ------------------------------------------------------------*/
  30:USB_DEVICE/App/usbd_storage_if.c **** /* Private macro -------------------------------------------------------------*/
  31:USB_DEVICE/App/usbd_storage_if.c **** 
  32:USB_DEVICE/App/usbd_storage_if.c **** /* USER CODE BEGIN PV */
ARM GAS  /tmp/ccWU66nC.s 			page 2


  33:USB_DEVICE/App/usbd_storage_if.c **** /* Private variables ---------------------------------------------------------*/
  34:USB_DEVICE/App/usbd_storage_if.c **** 
  35:USB_DEVICE/App/usbd_storage_if.c **** /* USER CODE END PV */
  36:USB_DEVICE/App/usbd_storage_if.c **** 
  37:USB_DEVICE/App/usbd_storage_if.c **** /** @addtogroup STM32_USB_OTG_DEVICE_LIBRARY
  38:USB_DEVICE/App/usbd_storage_if.c ****   * @brief Usb device.
  39:USB_DEVICE/App/usbd_storage_if.c ****   * @{
  40:USB_DEVICE/App/usbd_storage_if.c ****   */
  41:USB_DEVICE/App/usbd_storage_if.c **** 
  42:USB_DEVICE/App/usbd_storage_if.c **** /** @defgroup USBD_STORAGE
  43:USB_DEVICE/App/usbd_storage_if.c ****   * @brief Usb mass storage device module
  44:USB_DEVICE/App/usbd_storage_if.c ****   * @{
  45:USB_DEVICE/App/usbd_storage_if.c ****   */
  46:USB_DEVICE/App/usbd_storage_if.c **** 
  47:USB_DEVICE/App/usbd_storage_if.c **** /** @defgroup USBD_STORAGE_Private_TypesDefinitions
  48:USB_DEVICE/App/usbd_storage_if.c ****   * @brief Private types.
  49:USB_DEVICE/App/usbd_storage_if.c ****   * @{
  50:USB_DEVICE/App/usbd_storage_if.c ****   */
  51:USB_DEVICE/App/usbd_storage_if.c **** 
  52:USB_DEVICE/App/usbd_storage_if.c **** /* USER CODE BEGIN PRIVATE_TYPES */
  53:USB_DEVICE/App/usbd_storage_if.c **** 
  54:USB_DEVICE/App/usbd_storage_if.c **** /* USER CODE END PRIVATE_TYPES */
  55:USB_DEVICE/App/usbd_storage_if.c **** 
  56:USB_DEVICE/App/usbd_storage_if.c **** /**
  57:USB_DEVICE/App/usbd_storage_if.c ****   * @}
  58:USB_DEVICE/App/usbd_storage_if.c ****   */
  59:USB_DEVICE/App/usbd_storage_if.c **** 
  60:USB_DEVICE/App/usbd_storage_if.c **** /** @defgroup USBD_STORAGE_Private_Defines
  61:USB_DEVICE/App/usbd_storage_if.c ****   * @brief Private defines.
  62:USB_DEVICE/App/usbd_storage_if.c ****   * @{
  63:USB_DEVICE/App/usbd_storage_if.c ****   */
  64:USB_DEVICE/App/usbd_storage_if.c **** 
  65:USB_DEVICE/App/usbd_storage_if.c **** #define STORAGE_LUN_NBR                  1
  66:USB_DEVICE/App/usbd_storage_if.c **** #define STORAGE_BLK_NBR                  0x10000
  67:USB_DEVICE/App/usbd_storage_if.c **** #define STORAGE_BLK_SIZ                  0x200
  68:USB_DEVICE/App/usbd_storage_if.c **** 
  69:USB_DEVICE/App/usbd_storage_if.c **** /* USER CODE BEGIN PRIVATE_DEFINES */
  70:USB_DEVICE/App/usbd_storage_if.c **** #define FLASH_START_ADDR 0x8040000  // Á®ãÂ∫èÂç†0x8000000~0x8005000ËåÉÂõ¥ÔºåÊääflashÂΩìUÁõòÊó∂Áî®0x
  71:USB_DEVICE/App/usbd_storage_if.c **** #define FLASH_PAGE_NUM   ((0x8080000 - FLASH_START_ADDR) / FLASH_PAGE_SIZE) // f103ÁöÑflashÁöÑ1È°µÊ
  72:USB_DEVICE/App/usbd_storage_if.c **** /* USER CODE END PRIVATE_DEFINES */
  73:USB_DEVICE/App/usbd_storage_if.c **** 
  74:USB_DEVICE/App/usbd_storage_if.c **** /**
  75:USB_DEVICE/App/usbd_storage_if.c ****   * @}
  76:USB_DEVICE/App/usbd_storage_if.c ****   */
  77:USB_DEVICE/App/usbd_storage_if.c **** 
  78:USB_DEVICE/App/usbd_storage_if.c **** /** @defgroup USBD_STORAGE_Private_Macros
  79:USB_DEVICE/App/usbd_storage_if.c ****   * @brief Private macros.
  80:USB_DEVICE/App/usbd_storage_if.c ****   * @{
  81:USB_DEVICE/App/usbd_storage_if.c ****   */
  82:USB_DEVICE/App/usbd_storage_if.c **** 
  83:USB_DEVICE/App/usbd_storage_if.c **** /* USER CODE BEGIN PRIVATE_MACRO */
  84:USB_DEVICE/App/usbd_storage_if.c **** 
  85:USB_DEVICE/App/usbd_storage_if.c **** /* USER CODE END PRIVATE_MACRO */
  86:USB_DEVICE/App/usbd_storage_if.c **** 
  87:USB_DEVICE/App/usbd_storage_if.c **** /**
  88:USB_DEVICE/App/usbd_storage_if.c ****   * @}
  89:USB_DEVICE/App/usbd_storage_if.c ****   */
ARM GAS  /tmp/ccWU66nC.s 			page 3


  90:USB_DEVICE/App/usbd_storage_if.c **** 
  91:USB_DEVICE/App/usbd_storage_if.c **** /** @defgroup USBD_STORAGE_Private_Variables
  92:USB_DEVICE/App/usbd_storage_if.c ****   * @brief Private variables.
  93:USB_DEVICE/App/usbd_storage_if.c ****   * @{
  94:USB_DEVICE/App/usbd_storage_if.c ****   */
  95:USB_DEVICE/App/usbd_storage_if.c **** 
  96:USB_DEVICE/App/usbd_storage_if.c **** /* USER CODE BEGIN INQUIRY_DATA_FS */
  97:USB_DEVICE/App/usbd_storage_if.c **** /** USB Mass storage Standard Inquiry Data. */
  98:USB_DEVICE/App/usbd_storage_if.c **** const int8_t STORAGE_Inquirydata_FS[] = {/* 36 */
  99:USB_DEVICE/App/usbd_storage_if.c **** 
 100:USB_DEVICE/App/usbd_storage_if.c ****   /* LUN 0 */
 101:USB_DEVICE/App/usbd_storage_if.c ****   0x00,
 102:USB_DEVICE/App/usbd_storage_if.c ****   0x80,
 103:USB_DEVICE/App/usbd_storage_if.c ****   0x02,
 104:USB_DEVICE/App/usbd_storage_if.c ****   0x02,
 105:USB_DEVICE/App/usbd_storage_if.c ****   (STANDARD_INQUIRY_DATA_LEN - 5),
 106:USB_DEVICE/App/usbd_storage_if.c ****   0x00,
 107:USB_DEVICE/App/usbd_storage_if.c ****   0x00,
 108:USB_DEVICE/App/usbd_storage_if.c ****   0x00,
 109:USB_DEVICE/App/usbd_storage_if.c ****   'S', 'T', 'M', ' ', ' ', ' ', ' ', ' ', /* Manufacturer : 8 bytes */
 110:USB_DEVICE/App/usbd_storage_if.c ****   'P', 'r', 'o', 'd', 'u', 'c', 't', ' ', /* Product      : 16 Bytes */
 111:USB_DEVICE/App/usbd_storage_if.c ****   ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ',
 112:USB_DEVICE/App/usbd_storage_if.c ****   '0', '.', '0' ,'1'                      /* Version      : 4 Bytes */
 113:USB_DEVICE/App/usbd_storage_if.c **** };
 114:USB_DEVICE/App/usbd_storage_if.c **** /* USER CODE END INQUIRY_DATA_FS */
 115:USB_DEVICE/App/usbd_storage_if.c **** 
 116:USB_DEVICE/App/usbd_storage_if.c **** /* USER CODE BEGIN PRIVATE_VARIABLES */
 117:USB_DEVICE/App/usbd_storage_if.c **** 
 118:USB_DEVICE/App/usbd_storage_if.c **** /* USER CODE END PRIVATE_VARIABLES */
 119:USB_DEVICE/App/usbd_storage_if.c **** 
 120:USB_DEVICE/App/usbd_storage_if.c **** /**
 121:USB_DEVICE/App/usbd_storage_if.c ****   * @}
 122:USB_DEVICE/App/usbd_storage_if.c ****   */
 123:USB_DEVICE/App/usbd_storage_if.c **** 
 124:USB_DEVICE/App/usbd_storage_if.c **** /** @defgroup USBD_STORAGE_Exported_Variables
 125:USB_DEVICE/App/usbd_storage_if.c ****   * @brief Public variables.
 126:USB_DEVICE/App/usbd_storage_if.c ****   * @{
 127:USB_DEVICE/App/usbd_storage_if.c ****   */
 128:USB_DEVICE/App/usbd_storage_if.c **** 
 129:USB_DEVICE/App/usbd_storage_if.c **** extern USBD_HandleTypeDef hUsbDeviceFS;
 130:USB_DEVICE/App/usbd_storage_if.c **** 
 131:USB_DEVICE/App/usbd_storage_if.c **** /* USER CODE BEGIN EXPORTED_VARIABLES */
 132:USB_DEVICE/App/usbd_storage_if.c **** 
 133:USB_DEVICE/App/usbd_storage_if.c **** /* USER CODE END EXPORTED_VARIABLES */
 134:USB_DEVICE/App/usbd_storage_if.c **** 
 135:USB_DEVICE/App/usbd_storage_if.c **** /**
 136:USB_DEVICE/App/usbd_storage_if.c ****   * @}
 137:USB_DEVICE/App/usbd_storage_if.c ****   */
 138:USB_DEVICE/App/usbd_storage_if.c **** 
 139:USB_DEVICE/App/usbd_storage_if.c **** /** @defgroup USBD_STORAGE_Private_FunctionPrototypes
 140:USB_DEVICE/App/usbd_storage_if.c ****   * @brief Private functions declaration.
 141:USB_DEVICE/App/usbd_storage_if.c ****   * @{
 142:USB_DEVICE/App/usbd_storage_if.c ****   */
 143:USB_DEVICE/App/usbd_storage_if.c **** 
 144:USB_DEVICE/App/usbd_storage_if.c **** static int8_t STORAGE_Init_FS(uint8_t lun);
 145:USB_DEVICE/App/usbd_storage_if.c **** static int8_t STORAGE_GetCapacity_FS(uint8_t lun, uint32_t *block_num, uint16_t *block_size);
 146:USB_DEVICE/App/usbd_storage_if.c **** static int8_t STORAGE_IsReady_FS(uint8_t lun);
ARM GAS  /tmp/ccWU66nC.s 			page 4


 147:USB_DEVICE/App/usbd_storage_if.c **** static int8_t STORAGE_IsWriteProtected_FS(uint8_t lun);
 148:USB_DEVICE/App/usbd_storage_if.c **** static int8_t STORAGE_Read_FS(uint8_t lun, uint8_t *buf, uint32_t blk_addr, uint16_t blk_len);
 149:USB_DEVICE/App/usbd_storage_if.c **** static int8_t STORAGE_Write_FS(uint8_t lun, uint8_t *buf, uint32_t blk_addr, uint16_t blk_len);
 150:USB_DEVICE/App/usbd_storage_if.c **** static int8_t STORAGE_GetMaxLun_FS(void);
 151:USB_DEVICE/App/usbd_storage_if.c **** 
 152:USB_DEVICE/App/usbd_storage_if.c **** /* USER CODE BEGIN PRIVATE_FUNCTIONS_DECLARATION */
 153:USB_DEVICE/App/usbd_storage_if.c **** 
 154:USB_DEVICE/App/usbd_storage_if.c **** /* USER CODE END PRIVATE_FUNCTIONS_DECLARATION */
 155:USB_DEVICE/App/usbd_storage_if.c **** 
 156:USB_DEVICE/App/usbd_storage_if.c **** /**
 157:USB_DEVICE/App/usbd_storage_if.c ****   * @}
 158:USB_DEVICE/App/usbd_storage_if.c ****   */
 159:USB_DEVICE/App/usbd_storage_if.c **** 
 160:USB_DEVICE/App/usbd_storage_if.c **** USBD_StorageTypeDef USBD_Storage_Interface_fops_FS =
 161:USB_DEVICE/App/usbd_storage_if.c **** {
 162:USB_DEVICE/App/usbd_storage_if.c ****   STORAGE_Init_FS,
 163:USB_DEVICE/App/usbd_storage_if.c ****   STORAGE_GetCapacity_FS,
 164:USB_DEVICE/App/usbd_storage_if.c ****   STORAGE_IsReady_FS,
 165:USB_DEVICE/App/usbd_storage_if.c ****   STORAGE_IsWriteProtected_FS,
 166:USB_DEVICE/App/usbd_storage_if.c ****   STORAGE_Read_FS,
 167:USB_DEVICE/App/usbd_storage_if.c ****   STORAGE_Write_FS,
 168:USB_DEVICE/App/usbd_storage_if.c ****   STORAGE_GetMaxLun_FS,
 169:USB_DEVICE/App/usbd_storage_if.c ****   (int8_t *)STORAGE_Inquirydata_FS
 170:USB_DEVICE/App/usbd_storage_if.c **** };
 171:USB_DEVICE/App/usbd_storage_if.c **** 
 172:USB_DEVICE/App/usbd_storage_if.c **** /* Private functions ---------------------------------------------------------*/
 173:USB_DEVICE/App/usbd_storage_if.c **** /**
 174:USB_DEVICE/App/usbd_storage_if.c ****   * @brief  Initializes over USB FS IP
 175:USB_DEVICE/App/usbd_storage_if.c ****   * @param  lun:
 176:USB_DEVICE/App/usbd_storage_if.c ****   * @retval USBD_OK if all operations are OK else USBD_FAIL
 177:USB_DEVICE/App/usbd_storage_if.c ****   */
 178:USB_DEVICE/App/usbd_storage_if.c **** int8_t STORAGE_Init_FS(uint8_t lun)
 179:USB_DEVICE/App/usbd_storage_if.c **** {
  27              		.loc 1 179 1 view -0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 0
  30              		@ frame_needed = 0, uses_anonymous_args = 0
  31              		@ link register save eliminated.
 180:USB_DEVICE/App/usbd_storage_if.c ****   /* USER CODE BEGIN 2 */
 181:USB_DEVICE/App/usbd_storage_if.c ****   /* ÂàùÂßãÂåñÂ≠òÂÇ®Âô®Ôºå‰ΩøÁî®STM32ÂÜÖÈÉ®FlashÊó∂ÔºåÂ∑≤ÁªèÂàùÂßãÂåñÂ•Ω‰∫ÜÔºåÂ∞±‰∏çÈúÄË¶ÅÈ¢ùÂ§ñÂàù
 182:USB_DEVICE/App/usbd_storage_if.c ****   return (USBD_OK);
  32              		.loc 1 182 3 view .LVU1
 183:USB_DEVICE/App/usbd_storage_if.c ****   /* USER CODE END 2 */
 184:USB_DEVICE/App/usbd_storage_if.c **** }
  33              		.loc 1 184 1 is_stmt 0 view .LVU2
  34 0000 0020     		movs	r0, #0
  35              	.LVL1:
  36              		.loc 1 184 1 view .LVU3
  37 0002 7047     		bx	lr
  38              		.cfi_endproc
  39              	.LFE68:
  41              		.section	.text.STORAGE_GetCapacity_FS,"ax",%progbits
  42              		.align	1
  43              		.syntax unified
  44              		.thumb
  45              		.thumb_func
  47              	STORAGE_GetCapacity_FS:
ARM GAS  /tmp/ccWU66nC.s 			page 5


  48              	.LVL2:
  49              	.LFB69:
 185:USB_DEVICE/App/usbd_storage_if.c **** 
 186:USB_DEVICE/App/usbd_storage_if.c **** /**
 187:USB_DEVICE/App/usbd_storage_if.c ****   * @brief  .
 188:USB_DEVICE/App/usbd_storage_if.c ****   * @param  lun: .
 189:USB_DEVICE/App/usbd_storage_if.c ****   * @param  block_num: .
 190:USB_DEVICE/App/usbd_storage_if.c ****   * @param  block_size: .
 191:USB_DEVICE/App/usbd_storage_if.c ****   * @retval USBD_OK if all operations are OK else USBD_FAIL
 192:USB_DEVICE/App/usbd_storage_if.c ****   */
 193:USB_DEVICE/App/usbd_storage_if.c **** int8_t STORAGE_GetCapacity_FS(uint8_t lun, uint32_t *block_num, uint16_t *block_size)
 194:USB_DEVICE/App/usbd_storage_if.c **** {
  50              		.loc 1 194 1 is_stmt 1 view -0
  51              		.cfi_startproc
  52              		@ args = 0, pretend = 0, frame = 0
  53              		@ frame_needed = 0, uses_anonymous_args = 0
  54              		@ link register save eliminated.
 195:USB_DEVICE/App/usbd_storage_if.c ****   /* USER CODE BEGIN 3 */
 196:USB_DEVICE/App/usbd_storage_if.c ****   /* Ëé∑ÂèñÂ≠òÂÇ®Âô®ÂÆπÈáè */
 197:USB_DEVICE/App/usbd_storage_if.c ****   *block_num  = FLASH_PAGE_NUM;   // È°µÁöÑÊï∞Èáè
  55              		.loc 1 197 3 view .LVU5
  56              		.loc 1 197 15 is_stmt 0 view .LVU6
  57 0000 8023     		movs	r3, #128
  58 0002 0B60     		str	r3, [r1]
 198:USB_DEVICE/App/usbd_storage_if.c ****   *block_size = FLASH_PAGE_SIZE;  // È°µÁöÑÂ§ßÂ∞è
  59              		.loc 1 198 3 is_stmt 1 view .LVU7
  60              		.loc 1 198 15 is_stmt 0 view .LVU8
  61 0004 4FF40063 		mov	r3, #2048
  62 0008 1380     		strh	r3, [r2]	@ movhi
 199:USB_DEVICE/App/usbd_storage_if.c ****   return (USBD_OK);
  63              		.loc 1 199 3 is_stmt 1 view .LVU9
 200:USB_DEVICE/App/usbd_storage_if.c ****   /* USER CODE END 3 */
 201:USB_DEVICE/App/usbd_storage_if.c **** }
  64              		.loc 1 201 1 is_stmt 0 view .LVU10
  65 000a 0020     		movs	r0, #0
  66              	.LVL3:
  67              		.loc 1 201 1 view .LVU11
  68 000c 7047     		bx	lr
  69              		.cfi_endproc
  70              	.LFE69:
  72              		.section	.text.STORAGE_IsReady_FS,"ax",%progbits
  73              		.align	1
  74              		.syntax unified
  75              		.thumb
  76              		.thumb_func
  78              	STORAGE_IsReady_FS:
  79              	.LVL4:
  80              	.LFB70:
 202:USB_DEVICE/App/usbd_storage_if.c **** 
 203:USB_DEVICE/App/usbd_storage_if.c **** /**
 204:USB_DEVICE/App/usbd_storage_if.c ****   * @brief  .
 205:USB_DEVICE/App/usbd_storage_if.c ****   * @param  lun: .
 206:USB_DEVICE/App/usbd_storage_if.c ****   * @retval USBD_OK if all operations are OK else USBD_FAIL
 207:USB_DEVICE/App/usbd_storage_if.c ****   */
 208:USB_DEVICE/App/usbd_storage_if.c **** int8_t STORAGE_IsReady_FS(uint8_t lun)
 209:USB_DEVICE/App/usbd_storage_if.c **** {
  81              		.loc 1 209 1 is_stmt 1 view -0
ARM GAS  /tmp/ccWU66nC.s 			page 6


  82              		.cfi_startproc
  83              		@ args = 0, pretend = 0, frame = 0
  84              		@ frame_needed = 0, uses_anonymous_args = 0
  85              		@ link register save eliminated.
 210:USB_DEVICE/App/usbd_storage_if.c ****   /* USER CODE BEGIN 4 */
 211:USB_DEVICE/App/usbd_storage_if.c ****   /* Â≠òÂÇ®Âô®ÊòØÂê¶ÂàùÂßãÂåñÂÆåÊàêÔºå‰ΩøÁî®STM32ÂÜÖÈÉ®FlashÊó∂ÔºåÂ∑≤ÁªèÂàùÂßãÂåñÂ•Ω‰∫ÜÔºåÂ∞±‰∏çÈúÄ
 212:USB_DEVICE/App/usbd_storage_if.c ****   return (USBD_OK);
  86              		.loc 1 212 3 view .LVU13
 213:USB_DEVICE/App/usbd_storage_if.c ****   /* USER CODE END 4 */
 214:USB_DEVICE/App/usbd_storage_if.c **** }
  87              		.loc 1 214 1 is_stmt 0 view .LVU14
  88 0000 0020     		movs	r0, #0
  89              	.LVL5:
  90              		.loc 1 214 1 view .LVU15
  91 0002 7047     		bx	lr
  92              		.cfi_endproc
  93              	.LFE70:
  95              		.section	.text.STORAGE_IsWriteProtected_FS,"ax",%progbits
  96              		.align	1
  97              		.syntax unified
  98              		.thumb
  99              		.thumb_func
 101              	STORAGE_IsWriteProtected_FS:
 102              	.LVL6:
 103              	.LFB71:
 215:USB_DEVICE/App/usbd_storage_if.c **** 
 216:USB_DEVICE/App/usbd_storage_if.c **** /**
 217:USB_DEVICE/App/usbd_storage_if.c ****   * @brief  .
 218:USB_DEVICE/App/usbd_storage_if.c ****   * @param  lun: .
 219:USB_DEVICE/App/usbd_storage_if.c ****   * @retval USBD_OK if all operations are OK else USBD_FAIL
 220:USB_DEVICE/App/usbd_storage_if.c ****   */
 221:USB_DEVICE/App/usbd_storage_if.c **** int8_t STORAGE_IsWriteProtected_FS(uint8_t lun)
 222:USB_DEVICE/App/usbd_storage_if.c **** {
 104              		.loc 1 222 1 is_stmt 1 view -0
 105              		.cfi_startproc
 106              		@ args = 0, pretend = 0, frame = 0
 107              		@ frame_needed = 0, uses_anonymous_args = 0
 108              		@ link register save eliminated.
 223:USB_DEVICE/App/usbd_storage_if.c ****   /* USER CODE BEGIN 5 */
 224:USB_DEVICE/App/usbd_storage_if.c ****   return (USBD_OK);
 109              		.loc 1 224 3 view .LVU17
 225:USB_DEVICE/App/usbd_storage_if.c ****   /* USER CODE END 5 */
 226:USB_DEVICE/App/usbd_storage_if.c **** }
 110              		.loc 1 226 1 is_stmt 0 view .LVU18
 111 0000 0020     		movs	r0, #0
 112              	.LVL7:
 113              		.loc 1 226 1 view .LVU19
 114 0002 7047     		bx	lr
 115              		.cfi_endproc
 116              	.LFE71:
 118              		.section	.text.STORAGE_GetMaxLun_FS,"ax",%progbits
 119              		.align	1
 120              		.syntax unified
 121              		.thumb
 122              		.thumb_func
 124              	STORAGE_GetMaxLun_FS:
 125              	.LFB74:
ARM GAS  /tmp/ccWU66nC.s 			page 7


 227:USB_DEVICE/App/usbd_storage_if.c **** 
 228:USB_DEVICE/App/usbd_storage_if.c **** /**
 229:USB_DEVICE/App/usbd_storage_if.c ****   * @brief  .
 230:USB_DEVICE/App/usbd_storage_if.c ****   * @param  lun: .
 231:USB_DEVICE/App/usbd_storage_if.c ****   * @retval USBD_OK if all operations are OK else USBD_FAIL
 232:USB_DEVICE/App/usbd_storage_if.c ****   */
 233:USB_DEVICE/App/usbd_storage_if.c **** int8_t STORAGE_Read_FS(uint8_t lun, uint8_t *buf, uint32_t blk_addr, uint16_t blk_len)
 234:USB_DEVICE/App/usbd_storage_if.c **** {
 235:USB_DEVICE/App/usbd_storage_if.c ****   /* USER CODE BEGIN 6 */
 236:USB_DEVICE/App/usbd_storage_if.c ****   /* ‰ªéFlash‰∏≠ËØªÂà∞RAM‰∏≠ */
 237:USB_DEVICE/App/usbd_storage_if.c ****   if(lun == 0)  // lunÊòØÈÄªËæëÂçïÂÖÉÂè∑ÔºàÊØîÂ¶ÇCÁõò„ÄÅDÁõòÁ≠âÔºâ
 238:USB_DEVICE/App/usbd_storage_if.c ****   {
 239:USB_DEVICE/App/usbd_storage_if.c ****     memcpy(buf, (void*)(FLASH_START_ADDR + blk_addr * FLASH_PAGE_SIZE), blk_len * FLASH_PAGE_SIZE);
 240:USB_DEVICE/App/usbd_storage_if.c ****     return (USBD_OK);
 241:USB_DEVICE/App/usbd_storage_if.c ****   }
 242:USB_DEVICE/App/usbd_storage_if.c ****   return (USBD_FAIL);
 243:USB_DEVICE/App/usbd_storage_if.c ****   /* USER CODE END 6 */
 244:USB_DEVICE/App/usbd_storage_if.c **** }
 245:USB_DEVICE/App/usbd_storage_if.c **** 
 246:USB_DEVICE/App/usbd_storage_if.c **** /**
 247:USB_DEVICE/App/usbd_storage_if.c ****   * @brief  .
 248:USB_DEVICE/App/usbd_storage_if.c ****   * @param  lun: .
 249:USB_DEVICE/App/usbd_storage_if.c ****   * @retval USBD_OK if all operations are OK else USBD_FAIL
 250:USB_DEVICE/App/usbd_storage_if.c ****   */
 251:USB_DEVICE/App/usbd_storage_if.c **** int8_t STORAGE_Write_FS(uint8_t lun, uint8_t *buf, uint32_t blk_addr, uint16_t blk_len)
 252:USB_DEVICE/App/usbd_storage_if.c **** {
 253:USB_DEVICE/App/usbd_storage_if.c ****   /* USER CODE BEGIN 7 */
 254:USB_DEVICE/App/usbd_storage_if.c ****   /* ‰ªéRAM‰∏≠ÂêëFlash‰∏≠ÂÜôÊï∞ÊçÆ */
 255:USB_DEVICE/App/usbd_storage_if.c ****   if(lun == 0)
 256:USB_DEVICE/App/usbd_storage_if.c ****   {
 257:USB_DEVICE/App/usbd_storage_if.c ****     /* Ëß£ÈîÅFlash */
 258:USB_DEVICE/App/usbd_storage_if.c ****     HAL_FLASH_Unlock();
 259:USB_DEVICE/App/usbd_storage_if.c ****     /* Êì¶Èô§Flash */
 260:USB_DEVICE/App/usbd_storage_if.c ****     FLASH_EraseInitTypeDef flashEraseDef;
 261:USB_DEVICE/App/usbd_storage_if.c ****     flashEraseDef.TypeErase = FLASH_TYPEERASE_PAGES;  // ÊåâÈ°µÊì¶Èô§Ôºåblock = page
 262:USB_DEVICE/App/usbd_storage_if.c ****     flashEraseDef.NbPages = blk_len;  // Êì¶Èô§ÁöÑblockÊï∞Èáè
 263:USB_DEVICE/App/usbd_storage_if.c ****     flashEraseDef.PageAddress = FLASH_START_ADDR + blk_addr * FLASH_PAGE_SIZE;  // Êì¶Èô§Ëµ∑ÂßãÂú∞Â
 264:USB_DEVICE/App/usbd_storage_if.c ****     uint32_t PageError = 0;
 265:USB_DEVICE/App/usbd_storage_if.c ****     HAL_FLASHEx_Erase(&flashEraseDef, &PageError);
 266:USB_DEVICE/App/usbd_storage_if.c ****     /* ÂÜôÂÖ•FlashÔºåÂÜôÂÖ•Á≤íÂ∫¶‰∏∫8Byte */
 267:USB_DEVICE/App/usbd_storage_if.c ****     for(int i = 0; i < blk_len * FLASH_PAGE_SIZE; i += 8)
 268:USB_DEVICE/App/usbd_storage_if.c ****     {
 269:USB_DEVICE/App/usbd_storage_if.c ****       HAL_FLASH_Program(FLASH_TYPEPROGRAM_DOUBLEWORD, FLASH_START_ADDR + blk_addr * FLASH_PAGE_SIZE
 270:USB_DEVICE/App/usbd_storage_if.c ****         *(uint64_t*)(buf + i));
 271:USB_DEVICE/App/usbd_storage_if.c ****     }
 272:USB_DEVICE/App/usbd_storage_if.c ****     /* ÈîÅ‰∏äFlash */
 273:USB_DEVICE/App/usbd_storage_if.c ****     HAL_FLASH_Lock();
 274:USB_DEVICE/App/usbd_storage_if.c ****     return (USBD_OK);
 275:USB_DEVICE/App/usbd_storage_if.c ****   }
 276:USB_DEVICE/App/usbd_storage_if.c ****   return (USBD_FAIL);
 277:USB_DEVICE/App/usbd_storage_if.c ****   /* USER CODE END 7 */
 278:USB_DEVICE/App/usbd_storage_if.c **** }
 279:USB_DEVICE/App/usbd_storage_if.c **** 
 280:USB_DEVICE/App/usbd_storage_if.c **** /**
 281:USB_DEVICE/App/usbd_storage_if.c ****   * @brief  .
 282:USB_DEVICE/App/usbd_storage_if.c ****   * @param  None
 283:USB_DEVICE/App/usbd_storage_if.c ****   * @retval .
ARM GAS  /tmp/ccWU66nC.s 			page 8


 284:USB_DEVICE/App/usbd_storage_if.c ****   */
 285:USB_DEVICE/App/usbd_storage_if.c **** int8_t STORAGE_GetMaxLun_FS(void)
 286:USB_DEVICE/App/usbd_storage_if.c **** {
 126              		.loc 1 286 1 is_stmt 1 view -0
 127              		.cfi_startproc
 128              		@ args = 0, pretend = 0, frame = 0
 129              		@ frame_needed = 0, uses_anonymous_args = 0
 130              		@ link register save eliminated.
 287:USB_DEVICE/App/usbd_storage_if.c ****   /* USER CODE BEGIN 8 */
 288:USB_DEVICE/App/usbd_storage_if.c ****   return (STORAGE_LUN_NBR - 1);
 131              		.loc 1 288 3 view .LVU21
 289:USB_DEVICE/App/usbd_storage_if.c ****   /* USER CODE END 8 */
 290:USB_DEVICE/App/usbd_storage_if.c **** }
 132              		.loc 1 290 1 is_stmt 0 view .LVU22
 133 0000 0020     		movs	r0, #0
 134 0002 7047     		bx	lr
 135              		.cfi_endproc
 136              	.LFE74:
 138              		.section	.text.STORAGE_Write_FS,"ax",%progbits
 139              		.align	1
 140              		.syntax unified
 141              		.thumb
 142              		.thumb_func
 144              	STORAGE_Write_FS:
 145              	.LVL8:
 146              	.LFB73:
 252:USB_DEVICE/App/usbd_storage_if.c ****   /* USER CODE BEGIN 7 */
 147              		.loc 1 252 1 is_stmt 1 view -0
 148              		.cfi_startproc
 149              		@ args = 0, pretend = 0, frame = 24
 150              		@ frame_needed = 0, uses_anonymous_args = 0
 255:USB_DEVICE/App/usbd_storage_if.c ****   {
 151              		.loc 1 255 3 view .LVU24
 255:USB_DEVICE/App/usbd_storage_if.c ****   {
 152              		.loc 1 255 5 is_stmt 0 view .LVU25
 153 0000 08B1     		cbz	r0, .L15
 276:USB_DEVICE/App/usbd_storage_if.c ****   /* USER CODE END 7 */
 154              		.loc 1 276 10 view .LVU26
 155 0002 0220     		movs	r0, #2
 156              	.LVL9:
 278:USB_DEVICE/App/usbd_storage_if.c **** 
 157              		.loc 1 278 1 view .LVU27
 158 0004 7047     		bx	lr
 159              	.LVL10:
 160              	.L15:
 252:USB_DEVICE/App/usbd_storage_if.c ****   /* USER CODE BEGIN 7 */
 161              		.loc 1 252 1 view .LVU28
 162 0006 F0B5     		push	{r4, r5, r6, r7, lr}
 163              	.LCFI0:
 164              		.cfi_def_cfa_offset 20
 165              		.cfi_offset 4, -20
 166              		.cfi_offset 5, -16
 167              		.cfi_offset 6, -12
 168              		.cfi_offset 7, -8
 169              		.cfi_offset 14, -4
 170 0008 87B0     		sub	sp, sp, #28
 171              	.LCFI1:
ARM GAS  /tmp/ccWU66nC.s 			page 9


 172              		.cfi_def_cfa_offset 48
 173 000a 0F46     		mov	r7, r1
 174 000c 1546     		mov	r5, r2
 175 000e 1E46     		mov	r6, r3
 176              	.LBB2:
 258:USB_DEVICE/App/usbd_storage_if.c ****     /* Êì¶Èô§Flash */
 177              		.loc 1 258 5 is_stmt 1 view .LVU29
 178 0010 FFF7FEFF 		bl	HAL_FLASH_Unlock
 179              	.LVL11:
 260:USB_DEVICE/App/usbd_storage_if.c ****     flashEraseDef.TypeErase = FLASH_TYPEERASE_PAGES;  // ÊåâÈ°µÊì¶Èô§Ôºåblock = page
 180              		.loc 1 260 5 view .LVU30
 261:USB_DEVICE/App/usbd_storage_if.c ****     flashEraseDef.NbPages = blk_len;  // Êì¶Èô§ÁöÑblockÊï∞Èáè
 181              		.loc 1 261 5 view .LVU31
 261:USB_DEVICE/App/usbd_storage_if.c ****     flashEraseDef.NbPages = blk_len;  // Êì¶Èô§ÁöÑblockÊï∞Èáè
 182              		.loc 1 261 29 is_stmt 0 view .LVU32
 183 0014 0024     		movs	r4, #0
 184 0016 0294     		str	r4, [sp, #8]
 262:USB_DEVICE/App/usbd_storage_if.c ****     flashEraseDef.PageAddress = FLASH_START_ADDR + blk_addr * FLASH_PAGE_SIZE;  // Êì¶Èô§Ëµ∑ÂßãÂú∞Â
 185              		.loc 1 262 5 is_stmt 1 view .LVU33
 262:USB_DEVICE/App/usbd_storage_if.c ****     flashEraseDef.PageAddress = FLASH_START_ADDR + blk_addr * FLASH_PAGE_SIZE;  // Êì¶Èô§Ëµ∑ÂßãÂú∞Â
 186              		.loc 1 262 27 is_stmt 0 view .LVU34
 187 0018 0596     		str	r6, [sp, #20]
 263:USB_DEVICE/App/usbd_storage_if.c ****     uint32_t PageError = 0;
 188              		.loc 1 263 5 is_stmt 1 view .LVU35
 263:USB_DEVICE/App/usbd_storage_if.c ****     uint32_t PageError = 0;
 189              		.loc 1 263 50 is_stmt 0 view .LVU36
 190 001a 05F58035 		add	r5, r5, #65536
 191              	.LVL12:
 263:USB_DEVICE/App/usbd_storage_if.c ****     uint32_t PageError = 0;
 192              		.loc 1 263 50 view .LVU37
 193 001e 8035     		adds	r5, r5, #128
 194              	.LVL13:
 263:USB_DEVICE/App/usbd_storage_if.c ****     uint32_t PageError = 0;
 195              		.loc 1 263 50 view .LVU38
 196 0020 ED02     		lsls	r5, r5, #11
 197              	.LVL14:
 263:USB_DEVICE/App/usbd_storage_if.c ****     uint32_t PageError = 0;
 198              		.loc 1 263 31 view .LVU39
 199 0022 0495     		str	r5, [sp, #16]
 264:USB_DEVICE/App/usbd_storage_if.c ****     HAL_FLASHEx_Erase(&flashEraseDef, &PageError);
 200              		.loc 1 264 5 is_stmt 1 view .LVU40
 264:USB_DEVICE/App/usbd_storage_if.c ****     HAL_FLASHEx_Erase(&flashEraseDef, &PageError);
 201              		.loc 1 264 14 is_stmt 0 view .LVU41
 202 0024 0194     		str	r4, [sp, #4]
 265:USB_DEVICE/App/usbd_storage_if.c ****     /* ÂÜôÂÖ•FlashÔºåÂÜôÂÖ•Á≤íÂ∫¶‰∏∫8Byte */
 203              		.loc 1 265 5 is_stmt 1 view .LVU42
 204 0026 01A9     		add	r1, sp, #4
 205 0028 02A8     		add	r0, sp, #8
 206 002a FFF7FEFF 		bl	HAL_FLASHEx_Erase
 207              	.LVL15:
 267:USB_DEVICE/App/usbd_storage_if.c ****     {
 208              		.loc 1 267 5 view .LVU43
 209              	.LBB3:
 267:USB_DEVICE/App/usbd_storage_if.c ****     {
 210              		.loc 1 267 9 view .LVU44
 267:USB_DEVICE/App/usbd_storage_if.c ****     {
 211              		.loc 1 267 5 is_stmt 0 view .LVU45
ARM GAS  /tmp/ccWU66nC.s 			page 10


 212 002e 07E0     		b	.L8
 213              	.LVL16:
 214              	.L9:
 269:USB_DEVICE/App/usbd_storage_if.c ****         *(uint64_t*)(buf + i));
 215              		.loc 1 269 7 is_stmt 1 discriminator 3 view .LVU46
 270:USB_DEVICE/App/usbd_storage_if.c ****     }
 216              		.loc 1 270 26 is_stmt 0 discriminator 3 view .LVU47
 217 0030 3B19     		adds	r3, r7, r4
 269:USB_DEVICE/App/usbd_storage_if.c ****         *(uint64_t*)(buf + i));
 218              		.loc 1 269 7 discriminator 3 view .LVU48
 219 0032 D3E90023 		ldrd	r2, [r3]
 220 0036 2919     		adds	r1, r5, r4
 221 0038 0320     		movs	r0, #3
 222 003a FFF7FEFF 		bl	HAL_FLASH_Program
 223              	.LVL17:
 267:USB_DEVICE/App/usbd_storage_if.c ****     {
 224              		.loc 1 267 53 is_stmt 1 discriminator 3 view .LVU49
 225 003e 0834     		adds	r4, r4, #8
 226              	.LVL18:
 227              	.L8:
 267:USB_DEVICE/App/usbd_storage_if.c ****     {
 228              		.loc 1 267 22 discriminator 1 view .LVU50
 229 0040 B4EBC62F 		cmp	r4, r6, lsl #11
 230 0044 F4D3     		bcc	.L9
 231              	.LBE3:
 273:USB_DEVICE/App/usbd_storage_if.c ****     return (USBD_OK);
 232              		.loc 1 273 5 view .LVU51
 233 0046 FFF7FEFF 		bl	HAL_FLASH_Lock
 234              	.LVL19:
 274:USB_DEVICE/App/usbd_storage_if.c ****   }
 235              		.loc 1 274 5 view .LVU52
 274:USB_DEVICE/App/usbd_storage_if.c ****   }
 236              		.loc 1 274 12 is_stmt 0 view .LVU53
 237 004a 0020     		movs	r0, #0
 238              	.LBE2:
 278:USB_DEVICE/App/usbd_storage_if.c **** 
 239              		.loc 1 278 1 view .LVU54
 240 004c 07B0     		add	sp, sp, #28
 241              	.LCFI2:
 242              		.cfi_def_cfa_offset 20
 243              		@ sp needed
 244 004e F0BD     		pop	{r4, r5, r6, r7, pc}
 278:USB_DEVICE/App/usbd_storage_if.c **** 
 245              		.loc 1 278 1 view .LVU55
 246              		.cfi_endproc
 247              	.LFE73:
 249              		.section	.text.STORAGE_Read_FS,"ax",%progbits
 250              		.align	1
 251              		.syntax unified
 252              		.thumb
 253              		.thumb_func
 255              	STORAGE_Read_FS:
 256              	.LVL20:
 257              	.LFB72:
 234:USB_DEVICE/App/usbd_storage_if.c ****   /* USER CODE BEGIN 6 */
 258              		.loc 1 234 1 is_stmt 1 view -0
 259              		.cfi_startproc
ARM GAS  /tmp/ccWU66nC.s 			page 11


 260              		@ args = 0, pretend = 0, frame = 0
 261              		@ frame_needed = 0, uses_anonymous_args = 0
 237:USB_DEVICE/App/usbd_storage_if.c ****   {
 262              		.loc 1 237 3 view .LVU57
 237:USB_DEVICE/App/usbd_storage_if.c ****   {
 263              		.loc 1 237 5 is_stmt 0 view .LVU58
 264 0000 08B1     		cbz	r0, .L23
 242:USB_DEVICE/App/usbd_storage_if.c ****   /* USER CODE END 6 */
 265              		.loc 1 242 10 view .LVU59
 266 0002 0220     		movs	r0, #2
 267              	.LVL21:
 244:USB_DEVICE/App/usbd_storage_if.c **** 
 268              		.loc 1 244 1 view .LVU60
 269 0004 7047     		bx	lr
 270              	.LVL22:
 271              	.L23:
 234:USB_DEVICE/App/usbd_storage_if.c ****   /* USER CODE BEGIN 6 */
 272              		.loc 1 234 1 view .LVU61
 273 0006 08B5     		push	{r3, lr}
 274              	.LCFI3:
 275              		.cfi_def_cfa_offset 8
 276              		.cfi_offset 3, -8
 277              		.cfi_offset 14, -4
 278 0008 8E46     		mov	lr, r1
 239:USB_DEVICE/App/usbd_storage_if.c ****     return (USBD_OK);
 279              		.loc 1 239 5 is_stmt 1 view .LVU62
 239:USB_DEVICE/App/usbd_storage_if.c ****     return (USBD_OK);
 280              		.loc 1 239 42 is_stmt 0 view .LVU63
 281 000a 02F58031 		add	r1, r2, #65536
 282              	.LVL23:
 239:USB_DEVICE/App/usbd_storage_if.c ****     return (USBD_OK);
 283              		.loc 1 239 42 view .LVU64
 284 000e 8031     		adds	r1, r1, #128
 239:USB_DEVICE/App/usbd_storage_if.c ****     return (USBD_OK);
 285              		.loc 1 239 5 view .LVU65
 286 0010 DA02     		lsls	r2, r3, #11
 287              	.LVL24:
 239:USB_DEVICE/App/usbd_storage_if.c ****     return (USBD_OK);
 288              		.loc 1 239 5 view .LVU66
 289 0012 C902     		lsls	r1, r1, #11
 290              	.LVL25:
 239:USB_DEVICE/App/usbd_storage_if.c ****     return (USBD_OK);
 291              		.loc 1 239 5 view .LVU67
 292 0014 7046     		mov	r0, lr
 293              	.LVL26:
 239:USB_DEVICE/App/usbd_storage_if.c ****     return (USBD_OK);
 294              		.loc 1 239 5 view .LVU68
 295 0016 FFF7FEFF 		bl	memcpy
 296              	.LVL27:
 240:USB_DEVICE/App/usbd_storage_if.c ****   }
 297              		.loc 1 240 5 is_stmt 1 view .LVU69
 240:USB_DEVICE/App/usbd_storage_if.c ****   }
 298              		.loc 1 240 12 is_stmt 0 view .LVU70
 299 001a 0020     		movs	r0, #0
 244:USB_DEVICE/App/usbd_storage_if.c **** 
 300              		.loc 1 244 1 view .LVU71
 301 001c 08BD     		pop	{r3, pc}
ARM GAS  /tmp/ccWU66nC.s 			page 12


 302              		.cfi_endproc
 303              	.LFE72:
 305              		.global	USBD_Storage_Interface_fops_FS
 306              		.section	.data.USBD_Storage_Interface_fops_FS,"aw"
 307              		.align	2
 310              	USBD_Storage_Interface_fops_FS:
 311 0000 00000000 		.word	STORAGE_Init_FS
 312 0004 00000000 		.word	STORAGE_GetCapacity_FS
 313 0008 00000000 		.word	STORAGE_IsReady_FS
 314 000c 00000000 		.word	STORAGE_IsWriteProtected_FS
 315 0010 00000000 		.word	STORAGE_Read_FS
 316 0014 00000000 		.word	STORAGE_Write_FS
 317 0018 00000000 		.word	STORAGE_GetMaxLun_FS
 318 001c 00000000 		.word	STORAGE_Inquirydata_FS
 319              		.global	STORAGE_Inquirydata_FS
 320              		.section	.rodata.STORAGE_Inquirydata_FS,"a"
 321              		.align	2
 324              	STORAGE_Inquirydata_FS:
 325 0000 00800202 		.ascii	"\000\200\002\002\037\000\000\000STM     Product    "
 325      1F000000 
 325      53544D20 
 325      20202020 
 325      50726F64 
 326 001b 20202020 		.ascii	"     0.01"
 326      20302E30 
 326      31
 327              		.text
 328              	.Letext0:
 329              		.file 2 "/home/tanjie/EmbeddedLibrary/arm-gnu-toolchain-12.2.rel1-x86_64-arm-none-eabi/arm-none-ea
 330              		.file 3 "/home/tanjie/EmbeddedLibrary/arm-gnu-toolchain-12.2.rel1-x86_64-arm-none-eabi/lib/gcc/arm
 331              		.file 4 "/home/tanjie/EmbeddedLibrary/arm-gnu-toolchain-12.2.rel1-x86_64-arm-none-eabi/arm-none-ea
 332              		.file 5 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_def.h"
 333              		.file 6 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_flash_ex.h"
 334              		.file 7 "Middlewares/ST/STM32_USB_Device_Library/Core/Inc/usbd_def.h"
 335              		.file 8 "Middlewares/ST/STM32_USB_Device_Library/Class/MSC/Inc/usbd_msc.h"
 336              		.file 9 "USB_DEVICE/App/usbd_storage_if.h"
 337              		.file 10 "/home/tanjie/EmbeddedLibrary/arm-gnu-toolchain-12.2.rel1-x86_64-arm-none-eabi/arm-none-e
 338              		.file 11 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_flash.h"
 339              		.file 12 "<built-in>"
ARM GAS  /tmp/ccWU66nC.s 			page 13


DEFINED SYMBOLS
                            *ABS*:0000000000000000 usbd_storage_if.c
     /tmp/ccWU66nC.s:19     .text.STORAGE_Init_FS:0000000000000000 $t
     /tmp/ccWU66nC.s:24     .text.STORAGE_Init_FS:0000000000000000 STORAGE_Init_FS
     /tmp/ccWU66nC.s:42     .text.STORAGE_GetCapacity_FS:0000000000000000 $t
     /tmp/ccWU66nC.s:47     .text.STORAGE_GetCapacity_FS:0000000000000000 STORAGE_GetCapacity_FS
     /tmp/ccWU66nC.s:73     .text.STORAGE_IsReady_FS:0000000000000000 $t
     /tmp/ccWU66nC.s:78     .text.STORAGE_IsReady_FS:0000000000000000 STORAGE_IsReady_FS
     /tmp/ccWU66nC.s:96     .text.STORAGE_IsWriteProtected_FS:0000000000000000 $t
     /tmp/ccWU66nC.s:101    .text.STORAGE_IsWriteProtected_FS:0000000000000000 STORAGE_IsWriteProtected_FS
     /tmp/ccWU66nC.s:119    .text.STORAGE_GetMaxLun_FS:0000000000000000 $t
     /tmp/ccWU66nC.s:124    .text.STORAGE_GetMaxLun_FS:0000000000000000 STORAGE_GetMaxLun_FS
     /tmp/ccWU66nC.s:139    .text.STORAGE_Write_FS:0000000000000000 $t
     /tmp/ccWU66nC.s:144    .text.STORAGE_Write_FS:0000000000000000 STORAGE_Write_FS
     /tmp/ccWU66nC.s:250    .text.STORAGE_Read_FS:0000000000000000 $t
     /tmp/ccWU66nC.s:255    .text.STORAGE_Read_FS:0000000000000000 STORAGE_Read_FS
     /tmp/ccWU66nC.s:310    .data.USBD_Storage_Interface_fops_FS:0000000000000000 USBD_Storage_Interface_fops_FS
     /tmp/ccWU66nC.s:307    .data.USBD_Storage_Interface_fops_FS:0000000000000000 $d
     /tmp/ccWU66nC.s:324    .rodata.STORAGE_Inquirydata_FS:0000000000000000 STORAGE_Inquirydata_FS
     /tmp/ccWU66nC.s:321    .rodata.STORAGE_Inquirydata_FS:0000000000000000 $d

UNDEFINED SYMBOLS
HAL_FLASH_Unlock
HAL_FLASHEx_Erase
HAL_FLASH_Program
HAL_FLASH_Lock
memcpy
